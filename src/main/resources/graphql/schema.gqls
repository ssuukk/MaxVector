type Query {
    bookById(id: ID): Book
    """embeddingById(id: ID): Embedding"""
    findClosestByVector(vec: [Float!]!, k: Int!): [Embedding]
    findClosest(prompt: String!, k: Int!): [Embedding]
}

type Mutation {
    storeEmbedding(queries: [String!]!) : OpenAIStatus!
}

type OpenAIStatus {
    status: Boolean!
    error: String!
    count: Int!
}

type Book {
    id: ID
    name: String
    pageCount: Int
    author: Author
}

type Author {
    id: ID
    firstName: String
    lastName: String
}

type Embedding {
    id: ID
    embedding: [Float!]
    label: String!
}