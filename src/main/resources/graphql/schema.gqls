type Query {
    """embeddingById(id: ID): EmbeddingRecord"""
    findClosestByVector(vec: [Float!]!, k: Int!, measure: DistanceType = EUCLIDEAN): [EmbeddingRecord]
    findClosest(prompt: String!, k: Int!, measure: DistanceType = EUCLIDEAN): [EmbeddingRecord]
    deleteById(id: ID): Boolean!
}

type Mutation {
    storeEmbedding(queries: [String!]!) : OpenAIStatus!
}

enum DistanceType {
    EUCLIDEAN
    COSINE
    INNER_PRODUCT
}

type OpenAIStatus {
    status: Boolean!
    error: String!
    count: Int!
}

type EmbeddingRecord {
    id: ID
    embedding: PostgresVector!
    label: String!
    metadata: VectorMetadata
}

type PostgresVector {
    points: [Float!]!
}

type VectorMetadata {
    example: String!
}
